buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'springboot-lab'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.buildDemo = project.hasProperty('buildDemo') ? project.getProperty('buildDemo') : false

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile("org.springframework.boot:spring-boot-starter-logging")
    testCompile("junit:junit")
}

sourceSets {
  demo {
    java {
      srcDir 'src/demo/java'
      /*
      if(buildDemo) {
        compileClasspath += main.output
        runtimeClasspath += main.output
      }
      */
    }
    /*
    if (buildDemo) {
      compileClasspath += sourceSets.main.runtimeClasspath
    }
    */
  }
  main {
    if (buildDemo) {
      compileClasspath += sourceSets.demo.output
      runtimeClasspath += sourceSets.demo.output
    }
  }
}

task wrapper(type:Wrapper) {
  gradleVersion = '2.11'
}

println "Build demo: $buildDemo"